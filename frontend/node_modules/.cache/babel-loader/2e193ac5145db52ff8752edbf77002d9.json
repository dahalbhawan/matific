{"ast":null,"code":"var _jsxFileName = \"/Users/bhawan/Portfolio Projects/matific/frontend/src/screens/Scoreboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Scoreboard() {\n  _s();\n\n  const [matches, setMatches] = useState([]);\n\n  const match_type = number => {\n    if (number === 1) return 'Qualifiers';else if (number === 2) return 'Quarter Final';else if (number === 3) return 'Semi-final';else return 'Final';\n  };\n\n  useEffect(() => {\n    fetchScoreboard();\n  }, []);\n\n  const fetchScoreboard = async () => {\n    const response = await axios.get('/matches/');\n    setMatches(response.data);\n    console.log(response.data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Scoreboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), matches.map((match, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [match.first_team.name, \" vs \", match.second_team.name, \", winner: \", match.winner ? match.first_team.name : match.second_team.name, /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Scoreboard, \"YhlcfFikU4Xnm4DkUW695+Zqf6o=\");\n\n_c = Scoreboard;\nexport default Scoreboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Scoreboard\");","map":{"version":3,"sources":["/Users/bhawan/Portfolio Projects/matific/frontend/src/screens/Scoreboard.js"],"names":["React","useState","useEffect","axios","Scoreboard","matches","setMatches","match_type","number","fetchScoreboard","response","get","data","console","log","map","match","i","first_team","name","second_team","winner"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAClB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;;AACA,QAAMM,UAAU,GAAIC,MAAD,IAAY;AAC3B,QAAIA,MAAM,KAAK,CAAf,EACI,OAAO,YAAP,CADJ,KAEK,IAAIA,MAAM,KAAK,CAAf,EACD,OAAO,eAAP,CADC,KAEA,IAAIA,MAAM,KAAK,CAAf,EACD,OAAO,YAAP,CADC,KAGD,OAAO,OAAP;AACP,GATD;;AAUAN,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,eAAe;AAClB,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,eAAe,GAAG,YAAY;AAChC,UAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAU,WAAV,CAAvB;AACAL,IAAAA,UAAU,CAACI,QAAQ,CAACE,IAAV,CAAV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACE,IAArB;AACH,GAJD;;AAMA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEMP,OAAO,CAACU,GAAR,CAAY,CAACC,KAAD,EAAQC,CAAR,KAAc;AACxB,0BACI;AAAA,mBACKD,KAAK,CAACE,UAAN,CAAiBC,IADtB,UACgCH,KAAK,CAACI,WAAN,CAAkBD,IADlD,gBACkEH,KAAK,CAACK,MAAN,GAAeL,KAAK,CAACE,UAAN,CAAiBC,IAAhC,GAAuCH,KAAK,CAACI,WAAN,CAAkBD,IAD3H,eAEI;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAMC,KAPH,CAFN;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GAnCQf,U;;KAAAA,U;AAqCT,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nfunction Scoreboard() {\n    const [matches, setMatches] = useState([])\n    const match_type = (number) => {\n        if (number === 1)\n            return 'Qualifiers'\n        else if (number === 2)\n            return 'Quarter Final'\n        else if (number === 3)\n            return 'Semi-final'\n        else\n            return 'Final'\n    }\n    useEffect(() => {\n        fetchScoreboard()\n    }, [])\n\n    const fetchScoreboard = async () => {\n        const response = await axios.get('/matches/')\n        setMatches(response.data)\n        console.log(response.data)\n    }\n\n    return (\n        <div>\n            <h1>Scoreboard</h1>\n            { matches.map((match, i) => {\n                return (\n                    <div>\n                        {match.first_team.name} vs {match.second_team.name}, winner: {match.winner ? match.first_team.name : match.second_team.name}\n                        <hr></hr>\n                    </div>\n                    )\n                } ) }\n        </div>\n    )\n}\n\nexport default Scoreboard\n"]},"metadata":{},"sourceType":"module"}